name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Fetch Go dependencies
        run: |
          go mod tidy
          go mod download
          ls -l go.mod go.sum || echo "go.mod or go.sum missing"

      # Linux setup (uses pre-installed Docker)
      - name: Setup Docker (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo systemctl start docker
          sudo chmod 666 /var/run/docker.sock

      # macOS setup (uses Docker's experimental VM-less mode)
      - name: Setup Docker (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install docker docker-buildx
          mkdir -p ~/.docker/cli-plugins
          ln -sfn $(brew --prefix)/opt/docker-buildx/bin/docker-buildx ~/.docker/cli-plugins/docker-buildx
          docker buildx create --use --driver=docker-container
          docker buildx inspect --bootstrap

      # Windows setup (uses Docker CLI with buildx)
      - name: Setup Docker (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install docker-cli docker-buildx -y
          docker buildx create --use --driver=docker-container
          docker buildx inspect --bootstrap
        shell: powershell

      - name: Verify Docker
        run: |
          docker --version
          docker buildx ls
          docker buildx inspect