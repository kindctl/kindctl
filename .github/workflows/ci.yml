name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Docker (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get remove -y docker docker-engine docker.io containerd runc containerd.io || true
          sudo apt-get clean
          sudo apt-get update
          sudo apt-get install -y --fix-missing
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker
          sudo usermod -aG docker $USER

      - name: Set up Docker (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install --cask docker
          open /Applications/Docker.app || true

      - name: Install Docker (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install docker-cli -y
        shell: powershell

      - name: Run setup-dependencies script
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            powershell -File scripts/setup-dependencies.ps1
          else
            chmod +x scripts/setup-dependencies.sh
            ./scripts/setup-dependencies.sh
          fi
        shell: bash

      - name: Verify Docker Installation
        run: docker --version

      - name: Verify Running Containers
        run: docker ps

      - name: Run unit tests
        run: go test ./internal/... -v

      - name: Run integration tests
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            .\scripts\setup-dependencies.ps1
            .\scripts\test-integration.ps1
          else
            chmod +x scripts/setup-dependencies.sh
            CI=true ./scripts/setup-dependencies.sh
            chmod +x scripts/test-integration.sh
            ./scripts/test-integration.sh
          fi
        shell: bash

      - name: Build
        run: |
          chmod +x scripts/build.sh
          ./scripts/build.sh