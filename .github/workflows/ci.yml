name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Docker (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo usermod -aG docker $USER

      - name: Install Docker (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install docker
          docker --version

      - name: Install Docker (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install docker-desktop
          docker --version
        shell: powershell

      - name: Run setup-dependencies script
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            powershell -File scripts/setup-dependencies.ps1
          else
            chmod +x scripts/setup-dependencies.sh
            ./scripts/setup-dependencies.sh
          fi
        shell: bash

      - name: Run unit tests
        run: go test ./internal/... -v

      - name: Run integration tests
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            powershell -Command "scripts/test-integration.sh"
          else
            chmod +x scripts/test-integration.sh
            ./scripts/test-integration.sh
          fi
        shell: bash

      - name: Build
        run: |
          chmod +x scripts/build.sh
          ./scripts/build.sh