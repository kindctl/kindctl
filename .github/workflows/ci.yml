name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Fetch Go dependencies
        run: |
          go mod tidy
          go mod download
          ls -l go.mod go.sum || echo "go.mod or go.sum missing"

      - name: Install Docker (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo systemctl start docker
          sudo chmod 666 /var/run/docker.sock

      - name: Install Docker (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install docker-desktop -y
          Start-Sleep -Seconds 60
          & "C:\Program Files\Docker\Docker\DockerCli.exe" -SwitchLinuxEngine
          Start-Sleep -Seconds 30
          docker --version
          docker info --format '{{.OSType}}'
          docker ps
        shell: powershell

      - name: Verify Docker Installation
        run: docker --version

      - name: Verify Running Containers
        run: docker ps

#      - name: Run setup-dependencies script
#        run: |
#          if [ "${{ matrix.os }}" == "windows-latest" ]; then
#            powershell -File scripts/setup-dependencies.ps1
#          else
#            chmod +x scripts/setup-dependencies.sh
#            ./scripts/setup-dependencies.sh
#          fi
#        shell: bash
#
#      - name: Run unit tests
#        run: go test ./internal/... -v
#
#      - name: Run integration tests
#        run: |
#          if [ "${{ matrix.os }}" == "windows-latest" ]; then
#            .\scripts\test-integration.ps1
#          else
#            chmod +x scripts/test-integration.sh
#            ./scripts/test-integration.sh
#          fi
#        shell: bash
#
#      - name: Build
#        run: |
#          chmod +x scripts/build.sh
#          ./scripts/build.sh